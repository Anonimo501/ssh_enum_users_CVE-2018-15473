#!/usr/bin/env python3
import paramiko
import socket
import argparse

def check_cve(host, port):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        client.connect(hostname=host, port=port, username='', password='')
    except paramiko.AuthenticationException as e:
        if 'publickey' in str(e):
            print(f'Host {host}:{port} is not vulnerable')
        elif 'keyboard-interactive' in str(e):
            print(f'Host {host}:{port} is vulnerable')
        else:
            print(f'Error: {str(e)}')
    except (socket.timeout, socket.error) as e:
        print(f'Error: {str(e)}')
    else:
        print(f'Error: Expected authentication failure did not occur')
    finally:
        client.close()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='CVE-2018-15473 SSH user enumeration')
    parser.add_argument('host', type=str, help='Target host')
    parser.add_argument('-p', '--port', type=int, default=22, help='SSH port (default 22)')
    args = parser.parse_args()
    check_cve(args.host, args.port)
